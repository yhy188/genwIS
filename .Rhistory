knitr::opts_chunk$set(echo = TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GWASTools")
BiocManager::install("GWASTools")
```
```{r}
read.fasta(file = system.file("/Users/hayyen/Desktop/Yanglu_twitter/gene/GWHABKS00000000.genome.fasta", package = "seqinr"),
seqtype = c("DNA", "AA"), as.string = FALSE, forceDNAtolower = TRUE,
set.attributes = TRUE, legacy.mode = TRUE, seqonly = FALSE, strip.desc = FALSE,
whole.header = FALSE,
bfa = FALSE, sizeof.longlong = .Machine$sizeof.longlong,
endian = .Platform$endian, apply.mask = TRUE)
install.packages("seqinr")
library("seqinr", lib.loc="~/Library/R/3.6/library")
install.packages("ade4")
library("seqinr", lib.loc="~/Library/R/3.6/library")
install.packages("ade4")
library("seqinr", lib.loc="~/Library/R/3.6/library")
library("seqinr")
library("seqinr", lib.loc="~/Library/R/3.6/library")
install.packages("ade4")
#knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(devtools)
install_github("sdray/ade4")
library("seqinr", lib.loc="~/Library/R/3.6/library")
install_github("sdray/ade4")
install.packages("~/Downloads/ade4_1.7-13.tgz", repos = NULL, type = .Platform$pkgType)
library("ade4", lib.loc="~/Library/R/3.6/library")
detach("package:ade4", unload=TRUE)
library("ade4", lib.loc="~/Library/R/3.6/library")
library("seqinr", lib.loc="~/Library/R/3.6/library")
library("seqinr")
#install_github("sdray/ade4")
library("seqinr")
install_github("sdray/ade4")
install.packages("~/Downloads/ade4_1.7-15.tar.gz", repos = NULL, type = "source")
library("seqinr", lib.loc="~/Library/R/3.6/library")
detach("package:seqinr", unload=TRUE)
library("ade4", lib.loc="~/Library/R/3.6/library")
remove.packages("ade4", lib="~/Library/R/3.6/library")
install.packages("~/Downloads/ade4_1.7-15.tar.gz", repos = NULL, type = "source")
#install_github("sdray/ade4")
library("seqinr")
install.packages("~/Downloads/ade4_1.7-15.tar.gz", repos = NULL, type = "source")
#knitr::opts_chunk$set(echo = TRUE)
# load package
library(episcan)
install.packages("episcan")
library(episcan)
# load package
library(episcan)
library(devtools)
#install_github("sdray/ade4")
library("seqinr")
set.seed(321)
geno <- matrix(sample(0:2, size = 10000,
replace = TRUE, prob = c(0.5, 0.3, 0.2)), ncol = 100)
dimnames(geno) <- list(row = paste0("IND", 1:nrow(geno)),
col = paste0("rs", 1:ncol(geno)))
p <- c(rep(0, 60), rep(1, 40))
geno[1:5, 1:8]
episcan(geno1 = geno,
pheno = p,
phetype = "case-control",
outfile = "episcan_1geno_cc",
suffix = ".txt",
zpthres = 0.9,
chunksize = 20,
scale = TRUE)
result <- read.table("episcan_1geno_cc.txt",
header = TRUE,
stringsAsFactors = FALSE)
head(result)
# simulate data
geno1 <- matrix(sample(0:2, size = 10000,
replace = TRUE, prob = c(0.5, 0.3, 0.2)), ncol = 100)
geno2 <- matrix(sample(0:2, size = 20000,
replace = TRUE, prob = c(0.4, 0.3, 0.3)), ncol = 200)
dimnames(geno1) <- list(row = paste0("IND", 1:nrow(geno1)),
col = paste0("rs", 1:ncol(geno1)))
dimnames(geno2) <- list(row = paste0("IND", 1:nrow(geno2)),
col = paste0("exm", 1:ncol(geno2)))
p <- rnorm(100)
# scan epistasis
episcan(geno1 = geno1,
geno2 = geno2,
pheno = p,
phetype = "quantitative",
outfile = "episcan_2geno_quant",
suffix = ".txt",
zpthres = 0.6,
chunksize = 50,
scale = TRUE)
